
# name: check and deploy branch metadata
# on:
#   push:
#     branches:    
#       - 'qa'                            
# jobs:
#   deploy-branch:
#     runs-on: ubuntu-latest                     
#     timeout-minutes: 30
#     steps:
#       - name: install Salesforce CLI     
#         run: |
#           wget -nv https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
#           mkdir sfdx-cli
#           tar xJf sfdx-linux-x64.tar.xz -C sfdx-cli --strip-components 1
#           echo "$GITHUB_WORKSPACE/sfdx-cli/bin" >> $GITHUB_PATH
#       - name: check out repository code  
#         uses: actions/checkout@v2
#         with:   
#           path: 'repo'
#       - name: create ssh connection for ci repo
#         uses: webfactory/ssh-agent@v0.5.4
#         with:
#           ssh-private-key: ${{ secrets.SFDC_CI_DEPLOY_CODE }}
#       - name: check out ci repo
#         run: git clone git@github.com:purlos/sfdc-ci.git
#       - name: remove certain metadata types from deployment
#         run: ./sfdc-ci/sfdx/sfdx_metadata_removal.sh
#       - name: run script to authenticate sfdx to STAGING_1124  # if the branch that has received a commit is STAGING_1124, then authenticate to the Staging org
#         if: endsWith(github.ref, '/STAGING_1124')
#         # run: ./sfdc-ci/sfdx/sfdx_authenticate.sh -r ./sfdc-ci -k ${{ secrets.SFDX_DECRYPTION_KEY }} -i ${{ secrets.SFDX_DECRYPTION_IV }} -p ${{ secrets.SFDC_URL_STAGING }} -c ${{ secrets.SFDX_CLIENTID_STAGING }} -u ${{ secrets.SFDX_USERNAME_STAGING }}
#         run: ./sfdc-ci/sfdx/sfdx_authenticate.sh -r ./sfdc-ci -k ${{ secrets.URL_TO_DEPLOY }} -c ${{ secrets.CONSUMER_KEY }} -u ${{ secrets.USER_NAME }}

#       # below an example of how this can be used for other branches
#       #- name: run script to authenticate sfdx to CI 
#       #  if: github.ref == 'CI'
#       #  run: ./sfdc-ci/sfdx/sfdx_authenticate.sh -r ./sfdc-ci -k ${{ secrets.SFDX_DECRYPTION_KEY }} -i ${{ secrets.SFDX_DECRYPTION_IV }} -p ${{ secrets.SFDC_URL_CI }} -c ${{ secrets.SFDX_CLIENTID_CI }} -u ${{ secrets.SFDX_USERNAME_CI }}
#       - name: deploy the metadata
#         run: |
#           cd repo
#           sfdx force:source:deploy -u CI --verbose -w 60 -l NoTestRun -p force-app/main/default
#       - name: logout of the Salesforce org 
#         run: sfdx auth:logout --all --noprompt


name: check deploy metadata
on:
  pull_request:                                  # by default this includes opened, synchronize (commit to PR), reopened
    branches:    
      - 'qa'                                # additional branches can be added as required, possibly master
jobs:
  check-deploy:
    runs-on: ubuntu-latest                       # ubuntu-latest includes openssl, jq and node, but not sfdx
    timeout-minutes: 60
    steps:
      - name: install Salesforce CLI             # this is faster than npm installation
        run: |
          wget -nv https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-x64.tar.xz -C sfdx-cli --strip-components 1
          echo "$GITHUB_WORKSPACE/sfdx-cli/bin" >> $GITHUB_PATH
      - name: check out repository code          # checkout the repo into a subfolder: repo
        uses: actions/checkout@v2
        with:   
          path: 'repo'
      - name: create ssh connection for ci repo  # unofficial action to authenticate back to separate repo with ci scripts
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH }}
      - name: check out qa repo
        run: git clone git@github.com:purlos/sfdc-ci.git
      - name: remove certain metadata types from deployment
        run: ./sfdc-ci/sfdx/sfdx_metadata_removal.sh
      - name: run script to authenticate sfdx to qa
        run: ./sfdc-ci/sfdx/sfdx_authenticate.sh -r ./sfdc-ci -k ${{ secrets.SFDX_DECRYPTION_KEY }} -i ${{ secrets.SFDX_DECRYPTION_IV }} -p ${{ secrets.URL_TO_DEPLOY }} -c ${{ secrets.CONSUMER_SECRET }} -u ${{ secrets.USER_NAME }}
      - name: check deploy
        run: |
          cd repo
          sfdx force:source:deploy -u CI -c --verbose -w 60 -l RunLocalTests -p force-app/main/default --apiversion 60.0
      - name: logout of the Salesforce org 
        run: sfdx auth:logout --all --noprompt





